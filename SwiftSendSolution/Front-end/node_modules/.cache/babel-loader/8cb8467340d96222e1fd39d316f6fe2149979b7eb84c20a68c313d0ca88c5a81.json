{"ast":null,"code":"import React from\"react\";import{Formik,Form,Field,ErrorMessage}from\"formik\";import{Link}from\"react-router-dom\";import*as Yup from\"yup\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterPage=()=>{const registerSchema=Yup.object().shape({name:Yup.string().required(\"Required\"),email:Yup.string().email(\"Invalid email\").required(\"Required\"),password:Yup.string().min(6,\"Too short!\").required(\"Required\"),confirmPassword:Yup.string().oneOf([Yup.ref(\"password\"),null],\"Passwords must match\").required(\"Required\")});const handleSubmit=values=>{console.log(\"Register values:\",values);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register for SwiftSend\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{name:\"\",email:\"\",password:\"\",confirmPassword:\"\"},validationSchema:registerSchema,onSubmit:handleSubmit,children:()=>/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"name\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"name\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(Field,{type:\"email\",name:\"email\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"password\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"confirmPassword\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"confirmPassword\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login here\"})]})]})})]});};export default RegisterPage;","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Link","Yup","jsx","_jsx","jsxs","_jsxs","RegisterPage","registerSchema","object","shape","name","string","required","email","password","min","confirmPassword","oneOf","ref","handleSubmit","values","console","log","className","children","initialValues","validationSchema","onSubmit","type","component","to"],"sources":["C:/Ghani/CVProjects/SwiftSend/SwiftSendSolution/Front-end/src/components/RegisterPage.jsx"],"sourcesContent":["\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\n\nconst RegisterPage = () => {\n  const registerSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: Yup.string().min(6, \"Too short!\").required(\"Required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Required\"),\n  });\n\n  const handleSubmit = (values) => {\n    console.log(\"Register values:\", values);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Register for SwiftSend</h1>\n      <Formik\n        initialValues={{ name: \"\", email: \"\", password: \"\", confirmPassword: \"\" }}\n        validationSchema={registerSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form>\n            <div>\n              <label>Name</label>\n              <Field type=\"text\" name=\"name\" />\n              <ErrorMessage name=\"name\" component=\"div\" className=\"error-message\" />\n            </div>\n            <div>\n              <label>Email</label>\n              <Field type=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\" />\n            </div>\n            <div>\n              <label>Password</label>\n              <Field type=\"password\" name=\"password\" />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"error-message\" />\n            </div>\n            <div>\n              <label>Confirm Password</label>\n              <Field type=\"password\" name=\"confirmPassword\" />\n              <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"error-message\" />\n            </div>\n            <button type=\"submit\">Register</button>\n            <p>\n              Already have an account? <Link to=\"/login\">Login here</Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}